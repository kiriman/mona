{"version":3,"sources":["scripts/main.js"],"names":["getComments","wrapper","innerHTML","xhr","XMLHttpRequest","open","serverUrl","send","onreadystatechange","readyState","status","console","error","statusText","comments","JSON","parse","responseText","addComments","log","i","length","commentTemplate","createCommentTemplate","newComment","document","createElement","appendChild","comment","html","id","name","email","isEdited","is_edited","create_time","text","join","editText","e","getElementById","lastChild","el","getFormData","form","forms","feedback","elements","inputName","inputEmail","inputText","inputFile","tmpF","addEventListener"],"mappings":"AAAA,YAeA,SAAAA,eACAC,QAAAC,UAAA,aACA,IAAAC,GAAA,GAAAC,eAMAD,GAAAE,KAAA,MAAAC,UAAA,YAAA,GAGAH,EAAAI,OACAJ,EAAAK,mBAAA,WACA,GAAAL,EAAAM,aAGA,KAAAN,EAAAO,OACAC,QAAAC,MAAAT,EAAAO,OAAA,KAAAP,EAAAU,aAEAZ,QAAAC,UAAA,GAEAY,SAAAC,KAAAC,MAAAb,EAAAc,cAKAC,YAAAJ,aAGAH,QAAAQ,IAAA,sBAIA,QAAAD,aAAAJ,GACA,IAAA,GAAAM,GAAAN,EAAAO,OAAA,EAAAD,GAAA,EAAAA,IAAA,CAEA,GAAAE,GAAAC,sBAAAT,EAAAM,IAEAI,EAAAC,SAAAC,cAAA,MACAF,GAAAtB,UAAAoB,EAGArB,QAAA0B,YAAAH,IAKA,QAAAD,uBAAAK,GACA,GAAAC,IACA,gDAAAD,EAAAE,GAAA,KACA,8BACA,oBACA,yBACA,2BAAAF,EAAAG,KAAA,KAAAH,EAAAI,MAAA,SACA,SACA,yBACA,6DAAAC,SAAAL,EAAAM,WAAA,WAAAN,EAAAO,YAAA,QACA,SACA,SACA,SACA,6DAAAP,EAAAE,GAAA,KAAAF,EAAAQ,KAAA,SACA,UACAC,KAAA,KAEA,OAAAR,GAGA,QAAAI,UAAAC,GACA,MAAA,IAAAA,EACA,0BAEA,GAGA,QAAAI,UAAAC,GACAd,SAAAe,eAAA,aAAAC,UAAAvC,SAEAS,SAAAQ,IAAA,qBAAAoB,EAAArC,UAEA,IAAAwC,GAAAjB,SAAAC,cAAA,MACAgB,GAAAxC,UAAA,UAEAqC,EAAAZ,YAAAe,GAOA,QAAAC,eACA,GAAAC,GAAAnB,SAAAoB,MAAAC,QACAF,GAAAG,SAAAC,UACAJ,EAAAG,SAAAE,WACAL,EAAAG,SAAAG,UACAN,EAAAG,SAAAI,UAUA,QAAAC,QACAzC,QAAAQ,IAAA,QACAR,QAAAQ,IAAAM,SAAAe,eAAA,MAAAtC,WAtHAuB,SAAA4B,iBAAA,mBAAArD,YAIA,IAAAM,WAAA,+BAGAL,QAAAwB,SAAAe,eAAA,WAEA1B","file":"scripts/main.min.js","sourcesContent":["\"use strict\";\n\n// когда страница (DOM-дерево) полностью загружена, получаем комментарии с сервера getComments()\ndocument.addEventListener(\"DOMContentLoaded\", getComments);\n\n// url бэкенд сервера\n// var serverUrl = 'https://operun.herokuapp.com/api/';\nvar serverUrl = 'http://93.88.210.4:8080/api/';\n\n// блок в который будут добавлены загруженные с сервера комментарии\nvar wrapper = document.getElementById(\"wrapper\");\n\nvar comments = [];\n\n// функция получения комментариев с сервера\nfunction getComments(){\n\twrapper.innerHTML = \"Загрузка...\";\n\tvar xhr = new XMLHttpRequest();\n\t// var data = JSON.stringify({\n //  \t\t\t\t\t\tq: 'auth',\n\t// \t\t\t\t\tlogin: document.getElementById(\"login\").value,\n\t// \t\t\t\t\tpassword: document.getElementById(\"password\").value\n\t// \t});\n\txhr.open('GET', serverUrl+'comments', true);//true - асинхронно\n\t// xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n\t// xhr.send(data);\n\txhr.send();\n\txhr.onreadystatechange = function() {\n\t\tif (xhr.readyState != 4){//отправка данных завершена\n\t\t\treturn;\n\t\t}\n\t\tif (xhr.status != 200) {\n\t\t  console.error( xhr.status + ': ' + xhr.statusText );\n\t\t} else {\n\t\t  wrapper.innerHTML = \"\";\n\t\t  // console.log( JSON.stringify(xhr.responseText) );\n\t\t  comments = JSON.parse(xhr.responseText);\n\t\t  // console.log( JSON.stringify(result) );\n\t\t  // console.log( result[0]['text'] );\n\n\t\t  //добавляем комментарии на страницу\n\t\t  addComments(comments);\n\t\t}\n\t}\n\tconsole.log('getComments - stop');\n}\n\n// функция добавления комментариев\nfunction addComments(comments){\n\tfor (var i = comments.length - 1; i >= 0; i--) {\n\t\t// создаем html-блок комментария по шаблону\n\t\tvar commentTemplate = createCommentTemplate(comments[i]);\n\n\t\tvar newComment = document.createElement(\"div\");\n\t \tnewComment.innerHTML = commentTemplate;\n\n\t \t// добавлякм созданый html-блок с комментарием на страницу\n\t\twrapper.appendChild(newComment);\n\t};\n}\n\n// функция создания html-блока комментария\nfunction createCommentTemplate(comment){\n\tvar html = [\n\t\t'<div class=\"panel panel-default\" id=\"comment-'+comment.id+'\">',\n\t      '<div class=\"panel-heading\">',\n\t        '<div class=\"row\">',\n\t          '<div class=\"col-sm-6\">',\n\t            '<h3 class=\"panel-title\">'+comment.name+' ('+comment.email+')</h3>',\n\t          '</div>',\n\t          '<div class=\"col-sm-6\">',\n\t            '<h5 class=\"panel-title add-date\"><span class=\"admin-edit\">'+isEdited(comment.is_edited)+'</span> '+comment.create_time+'</h5>',\n\t          '</div>',\n\t        '</div>',\n\t      '</div>',\n\t      '<div class=\"panel-body\" onclick=\"editText(this)\" id=\"text-'+comment.id+'\">'+comment.text+'</div>',\n\t    '</div>',\n\t].join(\"\\n\");\n\n\treturn html;\n}\n// функция проверки на изменения комметария администратором\nfunction isEdited(is_edited){\n\tif(is_edited == 1){\n\t\treturn \"изменен администратором\";\n\t}\n\treturn \"\";\n}\n\nfunction editText(e){\n\tvar value = document.getElementById(\"comment-2\").lastChild.innerHTML;\n\t// var value = document.getElementById(\"text-2\").innerHTML;\n\tconsole.log(\"editText() value: \"+e.innerHTML);\n\n\tvar el = document.createElement(\"div\");\n\tel.innerHTML = \"new div\";\n\n\te.appendChild(el);\n\n\t//worked: e.innerHTML -> 'This my second comment'\n\t// e.innerHTML = \"kuku\";\n}\n\n// функция получения данных из формы обратной связи\nfunction getFormData(){\n\tvar form = document.forms.feedback;\n\tvar inputName = form.elements.inputName;\n\tvar inputEmail = form.elements.inputEmail;\n\tvar inputText = form.elements.inputText;\n\tvar inputFile = form.elements.inputFile;\t\n}\n\n// function preview(){\n// \tconsole.log(\"preview is started\");\t\n\t// console.log( inputName.value );\n\t// console.log( inputEmail.value );\n\t// console.log( inputText.value );\n// }\n\nfunction tmpF(){\n\tconsole.log(\"tmpF\");\n\tconsole.log( document.getElementById(\"ku\").innerHTML );\n}\n\n\n///////////////////////\n// http://jsfiddle.net/Z7R5n/\n// var nodeList = Array.prototype.slice.call( document.getElementById('myULelement').children ),\n//     liRef = document.getElementsByClassName('match')[0];\n\n// console.log( nodeList.indexOf( liRef ) );"],"sourceRoot":"/source/"}