{"version":3,"sources":["scripts/main.js"],"names":["getCommentsRequest","wrapper","innerHTML","xhr","XMLHttpRequest","open","serverUrl","send","onreadystatechange","readyState","status","console","error","statusText","comments","JSON","parse","responseText","addComments","i","length","commentTemplate","createCommentTemplate","newComment","document","createElement","appendChild","comment","html","id","name","email","isEdited","is_edited","create_time","text","editCommentTemplate","cancelEditText","getElementById","style","display","parentNode","lastChild","remove","saveEditText","editText","value","updateCommentsRequest","updateCommentsRequest_test","data","stringify","log","startEditText","currentEditBlock","getFormData","form","forms","feedback","elements","inputName","inputEmail","inputText","inputFile","tmpF","addEventListener"],"mappings":"AAAA,YAeA,SAAAA,sBACAC,QAAAC,UAAA,aACA,IAAAC,GAAA,GAAAC,eACAD,GAAAE,KAAA,MAAAC,UAAA,YAAA,GACAH,EAAAI,OACAJ,EAAAK,mBAAA,WACA,GAAAL,EAAAM,aAGA,KAAAN,EAAAO,OACAC,QAAAC,MAAAT,EAAAO,OAAA,KAAAP,EAAAU,aAEAZ,QAAAC,UAAA,GACAY,SAAAC,KAAAC,MAAAb,EAAAc,cAGAC,YAAAJ,aAMA,QAAAI,aAAAJ,GACA,IAAA,GAAAK,GAAAL,EAAAM,OAAA,EAAAD,GAAA,EAAAA,IAAA,CAEA,GAAAE,GAAAC,sBAAAR,EAAAK,IAEAI,EAAAC,SAAAC,cAAA,MACAF,GAAArB,UAAAmB,EAGApB,QAAAyB,YAAAH,IA0BA,QAAAD,uBAAAK,GACA,GAAAC,GACA,gDAAAD,EAAAE,GAAA,+IAIAF,EAAAG,KAJA,KAIAH,EAAAI,MAJA,wIAOAC,SAAAL,EAAAM,WAPA,WAOAN,EAAAO,YAPA,qHAWAP,EAAAE,GAXA,iBAWAF,EAAAE,GAXA,KAWAF,EAAAQ,KAXA,qBAeA,OAAAP,GAIA,QAAAI,UAAAC,GACA,MAAA,IAAAA,EACA,0BAEA,GAGA,QAAAG,qBAAAP,EAAAM,GACA,GAAAP,GACA,6GACAO,EADA,qHAIAN,EAJA,+FAKAA,EALA,gDASA,OAAAD,GAEA,QAAAS,gBAAAR,GACA,GAAAM,GAAAX,SAAAc,eAAA,QAAAT,EAEAM,GAAAI,MAAAC,QAAA,QACAL,EAAAM,WAAAC,UAAAC,SAEA,QAAAC,cAAAf,GACA,GAAAM,GAAAX,SAAAc,eAAA,QAAAT,GACAgB,EAAArB,SAAAc,eAAA,YAAAQ,KAEAC,uBAAAlB,EAAAgB,KACAV,EAAAjC,UAAA2C,GAEAV,EAAAI,MAAAC,QAAA,QACAL,EAAAM,WAAAC,UAAAC,SAEA,QAAAK,4BAAAnB,EAAAgB,GACA,OAAA,EAGA,QAAAE,uBAAAlB,EAAAgB,GACA,GAAA1C,GAAA,GAAAC,gBACA6C,EAAAlC,KAAAmC,WACArB,GAAAA,EACAgB,SAAAA,GAEAlC,SAAAwC,IAAAF,GACA9C,EAAAE,KAAA,MAAAC,UAAA,YAAA,GAEAH,EAAAI,KAAA0C,GACA9C,EAAAK,mBAAA,WACA,GAAAL,EAAAM,aAGA,KAAAN,EAAAO,OACAC,QAAAC,MAAAT,EAAAO,OAAA,KAAAP,EAAAU,YAIAF,QAAAwC,IAAAhD,EAAAc,gBAOA,QAAAmC,eAAAvB,GACA,GAAAM,GAAAX,SAAAc,eAAA,QAAAT,GACAwB,EAAA7B,SAAAC,cAAA,MACA4B,GAAAnD,UAAAkC,oBAAAP,EAAAM,EAAAjC,WAEAiC,EAAAI,MAAAC,QAAA,OACAL,EAAAM,WAAAf,YAAA2B,GAwCA,QAAAC,eACA,GAAAC,GAAA/B,SAAAgC,MAAAC,QACAF,GAAAG,SAAAC,UACAJ,EAAAG,SAAAE,WACAL,EAAAG,SAAAG,UACAN,EAAAG,SAAAI,UAUA,QAAAC,QACApD,QAAAwC,IAAA,QACAxC,QAAAwC,IAAA3B,SAAAc,eAAA,MAAApC,WA3NAsB,SAAAwC,iBAAA,mBAAAhE,mBAIA,IAAAM,WAAA,+BAGAL,QAAAuB,SAAAc,eAAA,WAEAxB","file":"scripts/main.min.js","sourcesContent":["\"use strict\";\n\n// когда страница (DOM-дерево) полностью загружена, получаем комментарии с сервера getCommentsRequest()\ndocument.addEventListener(\"DOMContentLoaded\", getCommentsRequest);\n\n// url бэкенд сервера\n// var serverUrl = 'https://operun.herokuapp.com/api/';\nvar serverUrl = 'http://93.88.210.4:8080/api/';\n\n// блок в который будут добавлены загруженные с сервера комментарии\nvar wrapper = document.getElementById(\"wrapper\");\n\nvar comments = [];\n\n// функция получения комментариев с сервера\nfunction getCommentsRequest(){\n\twrapper.innerHTML = \"Загрузка...\";\n\tvar xhr = new XMLHttpRequest();\n\txhr.open('GET', serverUrl+'comments', true);//true - асинхронно\n\txhr.send();\n\txhr.onreadystatechange = function() {\n\t\tif (xhr.readyState != 4){//отправка данных завершена\n\t\t\treturn;\n\t\t}\n\t\tif (xhr.status != 200) {\n\t\t  console.error( xhr.status + ': ' + xhr.statusText );\n\t\t} else {\n\t\t  wrapper.innerHTML = \"\";\n\t\t  comments = JSON.parse(xhr.responseText);\n\n\t\t  //добавляем комментарии на страницу\n\t\t  addComments(comments);\n\t\t}\n\t}\n}\n\n// функция добавления комментариев\nfunction addComments(comments){\n\tfor (var i = comments.length - 1; i >= 0; i--) {\n\t\t// создаем html-блок комментария по шаблону\n\t\tvar commentTemplate = createCommentTemplate(comments[i]);\n\n\t\tvar newComment = document.createElement(\"div\");\n\t \tnewComment.innerHTML = commentTemplate;\n\n\t \t// добавлякм созданый html-блок с комментарием на страницу\n\t\twrapper.appendChild(newComment);\n\t};\n}\n\n// функция создания html-блока комментария\n// function createCommentTemplate(comment){\n// \tvar html = [\n// \t\t'<div class=\"panel panel-default\" id=\"comment-'+comment.id+'\">',\n// \t      '<div class=\"panel-heading\">',\n// \t        '<div class=\"row\">',\n// \t          '<div class=\"col-sm-6\">',\n// \t            '<h3 class=\"panel-title\">'+comment.name+' ('+comment.email+')</h3>',\n// \t          '</div>',\n// \t          '<div class=\"col-sm-6\">',\n// \t            '<h5 class=\"panel-title add-date\"><span class=\"admin-edit\">'+isEdited(comment.is_edited)+'</span> '+comment.create_time+'</h5>',\n// \t          '</div>',\n// \t        '</div>',\n// \t      '</div>',\n// \t      '<div class=\"panel-body\" onclick=\"editText(this)\" id=\"text-'+comment.id+'\">'+comment.text+'</div>',\n// \t    '</div>',\n// \t].join(\"\\n\");\n\n// \treturn html;\n// }\n\n// функция создания html-блока комментария\nfunction createCommentTemplate(comment){\n\tvar html = \n\t\t`<div class=\"panel panel-default\" id=\"comment-`+comment.id+`\">\n\t      <div class=\"panel-heading\">\n\t        <div class=\"row\">\n\t          <div class=\"col-sm-6\">\n\t            <h3 class=\"panel-title\">`+comment.name+` (`+comment.email+`)</h3>\n\t          </div>\n\t          <div class=\"col-sm-6\">\n\t            <h5 class=\"panel-title add-date\"><span class=\"admin-edit\">`+isEdited(comment.is_edited)+`</span> `+comment.create_time+`</h5>\n\t          </div>\n\t        </div>\n\t      </div>\n\t      <div class=\"panel-body\" onclick=\"startEditText('`+comment.id+`')\" id=\"text-`+comment.id+`\">`+comment.text+`</div>\n\t    </div>`\n\t;\n\n\treturn html;\n}\n\n// функция проверки на изменения комметария администратором\nfunction isEdited(is_edited){\n\tif(is_edited == 1){\n\t\treturn \"изменен администратором\";\n\t}\n\treturn \"\";\n}\n\nfunction editCommentTemplate(id, text){\n\tvar html = \n\t\t`<div class=\"panel-body\">\n\t\t\t<textarea class=\"form-control\" id=\"editText\" rows=\"3\" placeholder=\"editText\">`+text+`</textarea>\n\t\t\t<p>\n\t\t\t<div class=\"form-inline\">\n\t    \t\t<button class=\"btn btn-default\" onclick=\"saveEditText('`+id+`')\">Сохранить</button>\n\t      \t\t<button class=\"btn btn-default\" onclick=\"cancelEditText('`+id+`')\">Отмена</button>\n      \t\t</div>\n\t\t</div>`\n\t;\n\treturn html;\n}\nfunction cancelEditText(id){\n\tvar text = document.getElementById(\"text-\"+id);\n\t// var parent = document.getElementById(\"comment-\"+id);\n\ttext.style.display=\"block\";\n\ttext.parentNode.lastChild.remove();\n}\nfunction saveEditText(id){\n\tvar text = document.getElementById(\"text-\"+id);\n\tvar editText = document.getElementById(\"editText\").value;\n\t// text.innerHTML = document.getElementById(\"editText\").value;\n\tif( updateCommentsRequest(id, editText) ){\n\t\ttext.innerHTML = editText;\n\t}\n\ttext.style.display=\"block\";\n\ttext.parentNode.lastChild.remove();\n}\nfunction updateCommentsRequest_test(id, editText){\n\treturn true;\n}\n// функция получения комментариев с сервера\nfunction updateCommentsRequest(id, editText){\n\tvar xhr = new XMLHttpRequest();\n\tvar data = JSON.stringify({\n  \t\t\t\t\t\tid: id,\n\t\t\t\t\t\teditText: editText\n\t\t});\n\tconsole.log(data);\n\txhr.open('PUT', serverUrl+'comments', true);//true - асинхронно\n\t// xhr.setRequestHeader('Content-type', 'application/json; charset=utf-8');\n\txhr.send(data);\n\txhr.onreadystatechange = function() {\n\t\tif (xhr.readyState != 4){//отправка данных завершена\n\t\t\treturn;\n\t\t}\n\t\tif (xhr.status != 200) {\n\t\t  console.error( xhr.status + ': ' + xhr.statusText );\n\t\t} else {\n\n\t\t  // result = JSON.parse(xhr.responseText);\n\t\t  console.log( xhr.responseText );\n\t\t  // console.log( JSON.stringify(result) );\n\t\t  // console.log( result[0]['text'] );\n\n\t\t}\n\t}\n}\nfunction startEditText(id){\n\tvar text = document.getElementById(\"text-\"+id);\n\tvar currentEditBlock = document.createElement(\"div\");\n\tcurrentEditBlock.innerHTML = editCommentTemplate(id, text.innerHTML);\n\n\ttext.style.display=\"none\";\n\ttext.parentNode.appendChild( currentEditBlock );\n\n\t// tooltips[ elem.name ].setAttribute(\"name\", \"tooltip\");\n\t// tooltips[ elem.name ].className = \"alert\";\n\t// tooltips[ elem.name ].innerHTML = msg;\n\n\t// el.style.visibility = \"hidden\";//visible\n\t// console.log(el.parentNode.innerHTML);\n\t// var p = el.parentNode;\n\t// var elems = document.getElementById(\"comment-2\");//.lastChild.innerHTML;\n\t// for (var i = elems.childNodes.length - 1; i >= 0; i--) {\n\t// \tconsole.log(elems.childNodes[i].tagName);\n\t// };\n\t// console.log(\"editText() el: \"+elems.children.length);// 2\n\t// console.log(\"editText() el: \"+elems.lastElementChild.innerHTML);// text\n\t// console.log(\"comment: \"+JSON.stringify(comment));\n\t// var el = document.getElementById(\"text-2\").innerHTML;\n\t// console.log(\"comment: \"+id);\n\t// var el = document.getElementById(\"text-\"+id).innerHTML;\n\t// console.log(\"editText() el: \"+el);\n\t// console.log(\"editText() el: \"+elems.childNodes[elems.childNodes.length - 2].innerHTML );\n\t// var elems = document.documentElement.childNodes;\n\t// elems = Array.prototype.slice.call(elems); // теперь elems - массив\n\n\t// elems.forEach(function(elem) {\n\t//   console.log( elem.tagName ); // HEAD, текст, BODY\n\t// });\n\t// child()\n\t// childNodes.length\n\n\t// var el = document.createElement(\"div\");\n\t// el.innerHTML = \"new div\";\n\n\t// e.appendChild(el);\n\n\t//worked: e.innerHTML -> 'This my second comment'\n\t// e.innerHTML = \"kuku\";\n}\n\n// функция получения данных из формы обратной связи\nfunction getFormData(){\n\tvar form = document.forms.feedback;\n\tvar inputName = form.elements.inputName;\n\tvar inputEmail = form.elements.inputEmail;\n\tvar inputText = form.elements.inputText;\n\tvar inputFile = form.elements.inputFile;\t\n}\n\n// function preview(){\n// \tconsole.log(\"preview is started\");\t\n\t// console.log( inputName.value );\n\t// console.log( inputEmail.value );\n\t// console.log( inputText.value );\n// }\n\nfunction tmpF(){\n\tconsole.log(\"tmpF\");\n\tconsole.log( document.getElementById(\"ku\").innerHTML );\n}\n\n\n///////////////////////\n// http://jsfiddle.net/Z7R5n/\n// var nodeList = Array.prototype.slice.call( document.getElementById('myULelement').children ),\n//     liRef = document.getElementsByClassName('match')[0];\n\n// console.log( nodeList.indexOf( liRef ) );"],"sourceRoot":"/source/"}